version: '3.8'
services:
  mysql_db_producer:
    container_name: mysql_db_producer
    image: mysql:8.0.32
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_ROOT_USERNAME: root
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: db_producer
    ports:
      - "3306:3306"
    volumes:
      - volume_mysql_db_producer:/var/lib/mysql
    healthcheck:
      test: "/usr/bin/mysql --user=root --password=password --execute \"SHOW DATABASES;\""
      interval: 2s
      timeout: 20s
      retries: 10

  postgres_db_consumer:
    container_name: postgres_db_consumer
    image: postgres:14-alpine3.18
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: db_consumer
    ports:
      - "5432:5432"
    volumes:
      - volume_postgres_db_consumer:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 2s
      timeout: 20s
      retries: 10

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 30s
      timeout: 10s
      retries: 3

#  email-service:
#    container_name: email-service
#    image: pblgllgs/email-service-rabbitmq:1.0.0
#    ports:
#      - "8081:8081"
#    environment:
#      SPRING_PROFILES_ACTIVE: docker
#    env_file:
#      - .env
#    healthcheck:
#      test: "curl --fail --silent localhost:8081/actuator/health | grep UP || exit 1"
#      start_period: 10s
#      interval: 5s
#      timeout: 3s
#      retries: 5
#    depends_on:
#      mysql_db_email:
#        condition: service_healthy
#      rabbitmq:
#        condition: service_healthy
#
#  user-service:
#    container_name: user-service
#    image: pblgllgs/user-service-rabbitmq:1.0.0
#    ports:
#      - "8080:8080"
#    environment:
#      SPRING_PROFILES_ACTIVE: docker
#    healthcheck:
#      test: "curl --fail --silent localhost:8080/actuator/health | grep UP || exit 1"
#      start_period: 10s
#      interval: 5s
#      timeout: 3s
#      retries: 5
#    depends_on:
#      postgres_db_user:
#        condition: service_healthy
#      rabbitmq:
#        condition: service_healthy

volumes:
  volume_mysql_db_producer:
    external: false
  volume_postgres_db_consumer:
    external: false